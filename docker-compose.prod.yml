version: "3.8"

# 生产环境配置 - 使用命名卷
# 使用方法: docker-compose -f docker-compose.prod.yml up -d

services:
  solocloud:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: solocloud-app
    image: solocloud:latest
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=false
      - DATABASE_URL=${DATABASE_URL:-sqlite:////app/data/SoloCloud.db}
      - STORAGE_PROVIDER=${STORAGE_PROVIDER:-local}
      - UPLOAD_FOLDER=${UPLOAD_FOLDER:-/app/uploads}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - LOG_FILE=${LOG_FILE:-/app/logs/SoloCloud.log}
    volumes:
      # 使用命名卷提供更好的性能和隔离
      - solocloud-data:/app/data
      - solocloud-uploads:/app/uploads
      - solocloud-logs:/app/logs
    networks:
      - solocloud-network
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "${LOG_MAX_SIZE:-10m}"
        max-file: "${LOG_MAX_FILES:-10}"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: "${CPU_LIMIT:-4}"
          memory: "${MEMORY_LIMIT:-4G}"
        reservations:
          cpus: "${CPU_RESERVATION:-1}"
          memory: "${MEMORY_RESERVATION:-1G}"

  nginx:
    image: nginx:alpine
    container_name: solocloud-nginx
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - solocloud-ssl:/etc/nginx/ssl:ro
      - solocloud-nginx-logs:/var/log/nginx
    depends_on:
      - solocloud
    networks:
      - solocloud-network
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "${LOG_MAX_SIZE:-10m}"
        max-file: "${LOG_MAX_FILES:-10}"

  # 可选：数据库服务（PostgreSQL）
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: solocloud-db
  #   environment:
  #     - POSTGRES_DB=solocloud
  #     - POSTGRES_USER=${DB_USER:-solocloud}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #   volumes:
  #     - solocloud-postgres:/var/lib/postgresql/data
  #   networks:
  #     - solocloud-network
  #   restart: always

  # 可选：Redis缓存
  # redis:
  #   image: redis:7-alpine
  #   container_name: solocloud-redis
  #   volumes:
  #     - solocloud-redis:/data
  #   networks:
  #     - solocloud-network
  #   restart: always

networks:
  solocloud-network:
    driver: bridge

# 命名卷 - 生产环境推荐
volumes:
  solocloud-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_VOLUME_PATH:-/var/lib/solocloud/data}
  
  solocloud-uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOADS_VOLUME_PATH:-/var/lib/solocloud/uploads}
  
  solocloud-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_VOLUME_PATH:-/var/lib/solocloud/logs}
  
  solocloud-ssl:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SSL_VOLUME_PATH:-/var/lib/solocloud/ssl}
  
  solocloud-nginx-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${NGINX_LOGS_VOLUME_PATH:-/var/lib/solocloud/nginx-logs}
  
  # solocloud-postgres:
  #   driver: local
  
  # solocloud-redis:
  #   driver: local